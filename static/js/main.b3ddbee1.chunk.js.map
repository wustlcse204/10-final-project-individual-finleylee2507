{"version":3,"sources":["components/StudySets/StudySetItem.module.css","components/StudySets/ViewSet.module.css","components/ui/Modal.module.css","components/layout/MainNavigation.module.css","components/ui/Card.module.css","components/ui/Backdrop.module.css","components/StudySets/StudySetList.module.css","components/layout/Layout.module.css","components/StudySets/FlashcardModeKernel.module.css","store/favorites-context.js","components/ui/Card.js","components/ui/Modal.js","components/ui/Backdrop.js","components/ui/Delete.js","pages/AllStudySets.js","components/StudySets/StudySetItem.js","components/StudySets/StudySetList.js","pages/Favorites.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/StudySets/FlashcardForm.js","pages/NewSet.js","components/StudySets/ViewSet.js","pages/EditSet.js","components/StudySets/FlashcardModeKernel.js","pages/FlashcardMode.js","App.js","index.js","components/StudySets/FlashcardForm.module.css"],"names":["module","exports","FavoritesContext","createContext","favorites","totalFavorites","addFavorite","favoriteMeetup","removeFavorite","meetupId","itemIsFavorite","FavoritesContextProvider","props","useState","userFavorites","setUserFavorites","context","length","prevUserFavorites","concat","filter","meetup","id","some","Provider","value","children","Card","className","classes","card","Modal","modal","cancelButton","onClick","onClickCancel","confirmButton","onClickConfirm","Backdrop","backdrop","Delete","modalIsOpen","setModalIsOpen","onDelete","isLoadingContext","loadedSets","AllStudySetsPage","isLoading","setIsLoading","setLoadedSets","isRerender","setIsRerender","useEffect","fetch","then","response","json","data","console","log","studysets","key","studyset","push","StudySetItem","useHistory","favoritesCtx","useContext","isLoadingCtx","item","image","src","alt","title","altImg","content","description","buttonGroup","actions","to","pathname","state","list","method","StudySetList","map","FavoritesPage","MainNavigation","header","logo","badge","Layout","main","FlashcardForm","imgurl","term","definition","inputList","setInputList","titleInput","setTitleInput","imageInput","setImageInput","descriptionInput","setDescriptionInput","handleInputChange","e","index","target","name","handleAddClick","form","onSubmit","preventDefault","setData","onAddSet","control","htmlFor","type","placeholder","required","onChange","rows","x","i","counter","buttonBox","removeButton","splice","handleRemoveClick","addButton","submitButton","NewSetPage","history","body","JSON","stringify","headers","alert","replace","ViewSet","useLocation","termTable","editBtn","studyBtn","EditSetPage","FlashcardModeKernel","FlashcardMode","App","exact","path","AllStudySets","NewSet","Favorites","EditSet","ReactDOM","render","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,QAAU,8BAA8B,QAAU,8BAA8B,YAAc,kCAAkC,OAAS,+B,mBCAjOD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,SAAW,4B,mBCAvGD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,OAAS,+BAA+B,MAAQ,gC,mBCA9ID,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,oC,qHCIZC,EAAmBC,wBAAc,CAC1CC,UAAW,GACXC,eAAgB,EAChBC,YAAY,SAACC,KACbC,eAAe,SAACC,KAChBC,eAAe,SAACD,OAIPE,EAAyB,SAACC,GACnC,MAAuCC,mBAAS,IAAhD,mBAAOC,EAAP,KAAqBC,EAArB,KAmBMC,EAAQ,CACVZ,UAAUU,EACVT,eAAeS,EAAcG,OAC7BX,YApBsB,SAACC,GACvBQ,GAAiB,SAACG,GACd,OAAOA,EAAkBC,OAAOZ,OAmBpCC,eAfwB,SAACC,GACzBM,GAAiB,SAAAG,GACb,OAAOA,EAAkBE,QAAO,SAAAC,GAAM,OAAEA,EAAOC,KAAKb,SAcxDC,eAVwB,SAACD,GAEzB,OAAOK,EAAcS,MAAK,SAAAF,GAAM,OAAEA,EAAOC,KAAKb,OAWlD,OAAO,cAACP,EAAiBsB,SAAlB,CAA2BC,MAAOT,EAAlC,SACFJ,EAAMc,Y,kCC/BAC,EATF,SAACf,GACV,OACI,qBAAKgB,UAAWC,IAAQC,KAAxB,SAEKlB,EAAMc,Y,wBCMJK,EAXD,SAACnB,GACX,OACI,sBAAKgB,UAAWC,IAAQG,MAAxB,UACI,8CACA,wBAAQJ,UAAWC,IAAQI,aAAcC,QAAStB,EAAMuB,cAAxD,oBACA,wBAAQP,UAAWC,IAAQO,cAAeF,QAAStB,EAAMyB,eAAzD,yB,iBCGGC,EARE,SAAC,GAAe,IAAdJ,EAAa,EAAbA,QACf,OACI,qBAAKN,UAAWC,IAAQU,SAAUL,QAASA,KCmCpCM,EAnCA,SAAC5B,GACZ,MAAsCC,oBAAS,GAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KAmBA,OACI,gCACI,wBAAQR,QAnBI,WAChBQ,GAAe,IAkBX,oBAGCD,GAAe,cAAC,EAAD,CAAON,cAZX,WAChBO,GAAe,IAW0CL,eAjBxC,WACjBK,GAAe,GACf9B,EAAM+B,SAAS/B,EAAMU,OAgBhBmB,GAAe,cAAC,EAAD,CAAUP,QATZ,WAClBQ,GAAe,U,QClBVE,EAAmBzC,wBAAc,CAC1CwC,SAAU,aACVE,WAAW,KAyDAC,EAtDU,WACrB,MAAkCjC,oBAAS,GAA3C,mBAAOkC,EAAP,KAAkBC,EAAlB,KACA,EAAoCnC,mBAAS,IAA7C,mBAAOgC,EAAP,KAAmBI,EAAnB,KACA,EAAiCpC,oBAAS,GAA1C,mBAAOqC,EAAP,KAAkBC,EAAlB,KAOAC,qBAAU,WAENJ,GAAa,GACbK,MAAM,0EACDC,MAAK,SAACC,GAEH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACHC,QAAQC,IAAIF,GACZ,IAAMG,EAAY,GAElB,IAAK,IAAMC,KAAOJ,EAAM,CAEpB,IAAMK,EAAQ,aACVxC,GAAIuC,GACDJ,EAAKI,IAEZD,EAAUG,KAAKD,GAEnBd,GAAa,GACbC,EAAcW,GACdT,GAAc,QAKvB,CAACD,IAGJ,IAAMlC,EAAQ,CACV2B,SAnCe,WACfQ,GAAc,IAmCdN,WAAWA,GAEf,OACI,gCACI,iDAEA,eAACD,EAAiBpB,SAAlB,CAA2BC,MAAOT,EAAlC,cAA6C+B,EAAY,2CAAoB,cAAC,EAAD,CAAca,UAAWf,W,QCwCnGmB,EAvFM,SAACpD,GACJqD,cAAd,IACMC,EAAeC,qBAAWjE,GAC1BkE,EAAaD,qBAAWvB,GAExBlC,EAAiBwD,EAAaxD,eAAeE,EAAMU,IA+BzD,OACI,oBAAIM,UAAWC,IAAQwC,KAAvB,SACI,eAAC,EAAD,WACI,qBAAKzC,UAAWC,IAAQyC,MAAxB,SAEK1D,EAAM0D,MAAO,qBAAKC,IAAK3D,EAAM0D,MAAOE,IAAK5D,EAAM6D,QAAc,cAAC,IAAD,CAAqB7C,UAAWC,IAAQ6C,WAG1G,sBAAK9C,UAAWC,IAAQ8C,QAAxB,UACI,6BAAK/D,EAAM6D,QACX,4BAAI7D,EAAMgE,iBAGd,sBAAKhD,UAAWC,IAAQgD,YAAxB,UAGI,qBAAKjD,UAAWC,IAAQiD,QAAxB,SAEI,cAAC,IAAD,CAAMC,GAAI,CACNC,SAAU,WACVC,MAAO,CAEHR,MAAO7D,EAAM6D,MACbS,KAAMtE,EAAMsE,KACZN,YAAYhE,EAAMgE,YAClBN,MAAM1D,EAAM0D,MACZhD,GAAGV,EAAMU,KARjB,SAWI,+CAIR,qBAAKM,UAAWC,IAAQiD,QAAxB,SACI,cAAC,EAAD,CAAQxD,GAAIV,EAAMU,GAAIqB,SA9CpB,SAACrB,GAEnB+B,MAAM,qEAAD,OAAsE/B,EAAtE,SAAiF,CAAE6D,OAAQ,WAC3F7B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZW,EAAazB,mBA2CT,qBAAKf,UAAWC,IAAQiD,QAAxB,SACI,wBAAQ5C,QAnEQ,WAC5BxB,EACAwD,EAAa1D,eAAeI,EAAMU,IAIlC4C,EAAa5D,YAAY,CACrBgB,GAAIV,EAAMU,GACVmD,MAAO7D,EAAM6D,MACbG,YAAahE,EAAMgE,YACnBN,MAAO1D,EAAM0D,SAyDL,SAA+C5D,EAAiB,wBAA0B,4B,iBCpEnG0E,EAVM,SAACxE,GAClB,OAEI,oBAAIgB,UAAWC,IAAQqD,KAAvB,SACKtE,EAAMgD,UAAU3C,OAAO,EAAEL,EAAMgD,UAAUyB,KAAI,SAAAvB,GAAQ,OAAI,cAAC,EAAD,CAAgCxC,GAAIwC,EAASxC,GAAIgD,MAAOR,EAASQ,MAAOG,MAAOX,EAASW,MAAOG,YAAad,EAASc,YAAaM,KAAMpB,EAASoB,MAA9HpB,EAASxC,OAA+H,gDCmBlNgE,EApBO,WAElB,IACIX,EADET,EAAaC,qBAAWjE,GAS9B,OALIyE,EAD6B,IAA9BT,EAAa7D,eACJ,6EAGA,cAAC,EAAD,CAAcuD,UAAWM,EAAa9D,YAG/C,oCAEI,8CACCuE,M,iBCUGY,EA5BQ,WACnB,IAAMrB,EAAaC,qBAAWjE,GAC9B,OAEG,cADC,CACD,UAAQ0B,UAAWC,IAAQ2D,OAA3B,UAEI,qBAAK5D,UAAWC,IAAQ4D,KAAxB,yBACA,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMV,GAAG,IAAT,8BAGJ,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,oCAGJ,6BACI,eAAC,IAAD,CAAMA,GAAG,aAAT,yBACC,sBAAMnD,UAAWC,IAAQ6D,MAAzB,SAAiCxB,EAAa7D,+B,iBCTvDsF,EAZA,SAAC/E,GACZ,OACI,gCACK,cAAC,EAAD,IACA,sBAAMgB,UAAWC,IAAQ+D,KAAzB,SACIhF,EAAMc,e,wBCwHRmE,EA7HO,SAACjF,GAEnB,IAAMsE,EAAOtE,EAAMsE,KACbT,EAAQ7D,EAAM6D,MACdqB,EAASlF,EAAMkF,OACflB,EAAchE,EAAMgE,YACpBtD,EAAKV,EAAMU,GACjB,EAAkCT,mBAASqE,GAAc,CAAC,CAAEa,KAAM,GAAIC,WAAY,MAAlF,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCrF,mBAAS4D,GAAgB,IAA7D,mBAAO0B,EAAP,KAAmBC,EAAnB,KACA,EAAoCvF,mBAASiF,GAAkB,IAA/D,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAgDzF,mBAAS+D,GAA4B,IAArF,mBAAO2B,EAAP,KAAyBC,EAAzB,KAIMC,EAAoB,SAACC,EAAGC,GAC1B,MAAwBD,EAAEE,OAAlBC,EAAR,EAAQA,KAAMpF,EAAd,EAAcA,MACdiC,QAAQC,IAAI,SAAUkD,GACtBnD,QAAQC,IAAI,UAAWlC,GACvB,IAAMyD,EAAI,YAAOe,GACjBf,EAAKyB,GAAOE,GAAQpF,EACpByE,EAAahB,IAWX4B,EAAiB,WACnBZ,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAEF,KAAM,GAAIC,WAAY,QAqBxD,OAEI,cAAC,EAAD,UACI,uBAAMpE,UAAWC,IAAQkF,KAAMC,SAnBjB,SAACN,GACnBA,EAAEO,iBAMF,IAAMC,EAAU,CACZzC,MAAO0B,EACP7B,MAAO+B,EACPzB,YAAa2B,EACbrB,KAAMe,GAGVrF,EAAMuG,SAASD,EAAS5F,IAKpB,UACI,sBAAKM,UAAWC,IAAQuF,QAAxB,UACI,uBAAOC,QAAQ,QAAf,sBACA,uBAAOC,KAAK,OAAOC,YAAY,mCAAmCC,UAAQ,EAAClG,GAAG,QAAQG,MAAO0E,EAAYsB,SAAU,SAACf,GAAD,OAAON,EAAcM,EAAEE,OAAOnF,aAIrJ,sBAAKG,UAAWC,IAAQuF,QAAxB,UACI,uBAAOC,QAAQ,QAAf,wBACA,uBAAOC,KAAK,MAAMhG,GAAG,QAAQiG,YAAY,mEAAmE9F,MAAO4E,EAAYoB,SAAU,SAACf,GAAD,OAAOJ,EAAcI,EAAEE,OAAOnF,aAI3K,sBAAKG,UAAWC,IAAQuF,QAAxB,UACI,uBAAOC,QAAQ,cAAf,0BACA,0BAAU/F,GAAG,cAAciG,YAAY,+CAA+CG,KAAK,IAAIjG,MAAO8E,EAAkBkB,SAAU,SAACf,GAAD,OAAOF,EAAoBE,EAAEE,OAAOnF,UACtK,uBACA,uBAAO4F,QAAQ,WAAf,+DAQJ,qBAAK/F,GAAG,WAAR,SAIK2E,EAAUZ,KAAI,SAACsC,EAAGC,GACf,OACI,sBAAKhG,UAAWC,IAAQuF,QAAxB,UACI,qBAAKxF,UAAWC,IAAQgG,QAAxB,SAAkCD,EAAI,IACtC,uBACA,uBAAON,KAAK,OAAOT,KAAK,OAAOU,YAAY,aAAajG,GAAE,cAASsG,GAAKnG,MAAOkG,EAAE5B,KAAMyB,UAAQ,EAACC,SAAU,SAAAf,GAAC,OAAID,EAAkBC,EAAGkB,MAEpI,uBAAON,KAAK,OAAOT,KAAK,aAAaU,YAAY,mBAAmBjG,GAAE,oBAAesG,GAAKnG,MAAOkG,EAAE3B,WAAYwB,UAAQ,EAACC,SAAU,SAAAf,GAAC,OAAID,EAAkBC,EAAGkB,MAC5J,uBACA,sBAAKhG,UAAWC,IAAQiG,UAAxB,UAC0B,IAArB7B,EAAUhF,QAAgB,wBAAQW,UAAWC,IAAQkG,aAAc7F,QAAS,kBAvEnF,SAAAyE,GACtB,IAAMzB,EAAI,YAAOe,GACjBf,EAAK8C,OAAOrB,EAAO,GACnBT,EAAahB,GAoEkG+C,CAAkBL,IAA1E,oBAE1B3B,EAAUhF,OAAS,IAAM2G,GAAK,wBAAQhG,UAAWC,IAAQqG,UAAWhG,QAAS4E,EAA/C,4BAanD,qBAAKlF,UAAWC,IAAQiD,QAAxB,SAEI,uBAAOwC,KAAK,SAAS7F,MAAM,OAAOG,UAAWC,IAAQsG,uBCrF1DC,EA3BI,WACf,IAAMC,EAAQpE,cAiBd,OACE,oCAEI,6CACA,cAAC,EAAD,CAAekD,SApBE,SAACD,GACpB7D,MAAM,yEACN,CACI8B,OAAO,OACPmD,KAAKC,KAAKC,UAAUtB,GACpBuB,QAAQ,CACJ,eAAe,sBAIrBnF,MAAK,WACHoF,MAAM,iCACNL,EAAQM,QAAQ,e,iBCgEbC,EA9EC,WAEZ,IAAQ3D,EAAU4D,cAAV5D,MAERvB,QAAQC,IAAIsB,EAAMC,MAClB,IAAMA,EAAOD,EAAMC,KACbT,EAAQQ,EAAMR,MACdG,EAAcK,EAAML,YACpBN,EAAQW,EAAMX,MACdhD,EAAK2D,EAAM3D,GAEjB,OAEI,gCACI,qBAAKM,UAAWC,IAAQiH,UAAxB,SAEI,kCACI,gCACI,+BACI,sCACA,iDAIR,gCACK5D,EAAKG,KAAI,SAACsC,EAAGC,GACV,OAEI,+BAEI,6BAAKD,EAAE5B,OACP,6BAAK4B,EAAE3B,0BAY/B,sBAAKpE,UAAWC,IAAQiD,QAAxB,UACI,cAAC,IAAD,CAAMC,GAAI,CACNC,SAAU,WACVC,MAAO,CACHC,KAAMA,EACNT,MAAOA,EACPG,YAAaA,EACbN,MAAOA,EACPhD,GAAIA,IAPZ,SAUI,wBAAQM,UAAWC,IAAQkH,QAA3B,yBAGpB,cAAC,IAAD,CAAMhE,GACF,CACIC,SAAS,iBACTC,MAAM,CACFC,KAAKA,IAJjB,SASA,wBAAQtD,UAAWC,IAAQmH,SAA3B,iCC1BeC,EAvCK,WAChB,IAAMZ,EAAQpE,cACNgB,EAAU4D,cAAV5D,MACFC,EAAKD,EAAMC,KACXT,EAAMQ,EAAMR,MACZG,EAAYK,EAAML,YAClBN,EAAMW,EAAMX,MACZhD,EAAG2D,EAAM3D,GAuBf,OACE,oCAEI,0CACA,cAAC,EAAD,CAAe6F,SAzBG,SAACD,EAAQ5F,GAE/B+B,MAAM,qEAAD,OAAsE/B,EAAtE,SAAgF,CACjF6D,OAAO,MACPsD,QAAQ,CACN,eAAgB,oBAElBH,KAAKC,KAAKC,UAAUtB,KAErB5D,MACC,SAACC,GACGmF,MAAM,oBACNL,EAAQM,QAAQ,SAawBzD,KAAMA,EAAMT,MAAOA,EAAOnD,GAAIA,EAAIsD,YAAaA,EAAakB,OAAQxB,Q,iBCvB3G4E,EAba,SAACtI,GAIzB,OAFA8C,QAAQC,IAAI/C,EAAM6C,MAGd,qBAAK7B,UAAWC,IAAQC,KAAxB,SAEQ,4CCkBDqH,EAvBO,WAEFlF,cAAhB,IAEMR,EADYoF,cAAV5D,MACWC,KAGnB,OAFAxB,QAAQC,IAAI,SAAUF,GAKlB,cAAC,EAAD,CAAqBA,KAAMA,KCkCpB2F,MAxCf,WACE,OACE,cAAC,EAAD,UAEE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACC,EAAD,MAGF,cAAC,IAAD,CAAOD,KAAK,WAAZ,SACE,cAACE,EAAD,MAGF,cAAC,IAAD,CAAOF,KAAK,aAAZ,SACE,cAACG,EAAD,MAGF,cAAC,IAAD,CAAOH,KAAK,WAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAACI,EAAD,MAGF,cAAC,IAAD,CAAOJ,KAAK,iBAAZ,SACE,cAAC,EAAD,YC3BVK,IAASC,OACP,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAKJC,SAASC,eAAe,U,kBChB1B9J,EAAOC,QAAU,CAAC,KAAO,4BAA4B,QAAU,+BAA+B,QAAU,+BAA+B,QAAU,+BAA+B,aAAe,oCAAoC,UAAY,iCAAiC,aAAe,uC","file":"static/js/main.b3ddbee1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StudySetItem_item__2TZrx\",\"image\":\"StudySetItem_image__1cjhh\",\"content\":\"StudySetItem_content__3q3AC\",\"actions\":\"StudySetItem_actions__23imy\",\"buttonGroup\":\"StudySetItem_buttonGroup__1WD4E\",\"altImg\":\"StudySetItem_altImg__1crsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"termTable\":\"ViewSet_termTable__2xCXv\",\"actions\":\"ViewSet_actions__2P7T5\",\"studyBtn\":\"ViewSet_studyBtn__111n9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2iEZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__i4v2g\",\"logo\":\"MainNavigation_logo__3Fpj4\",\"active\":\"MainNavigation_active__3JirC\",\"badge\":\"MainNavigation_badge__3QUbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3uyPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__31DHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"StudySetList_list__1FCPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2R6of\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"FlashcardModeKernel_card__36hCT\"};","import { createContext,useState } from \"react\";\n\n//initializes a react context \n//source: https://reactjs.org/docs/context.html \n//technically don't need any values but easier for vscode autocompletion \nexport const FavoritesContext = createContext({\n    favorites: [],\n    totalFavorites: 0,\n    addFavorite:(favoriteMeetup)=>{},\n    removeFavorite:(meetupId)=>{},\n    itemIsFavorite:(meetupId)=>{}\n});//returns a react component \n\n//main react wrapper class \nexport const FavoritesContextProvider=(props) =>{\n    const [userFavorites,setUserFavorites]=useState([])\n\n    const addFavoriteHandler =(favoriteMeetup)=>{\n        setUserFavorites((prevUserFavorites)=>{ //BETTER WAY OF UPDATING STATES (appending on previous)\n            return prevUserFavorites.concat(favoriteMeetup);\n        })\n    }\n\n    const removeFavoriteHandler=(meetupId)=>{\n        setUserFavorites(prevUserFavorites=>{\n            return prevUserFavorites.filter(meetup=>meetup.id!==meetupId);\n        })\n    }\n\n    const itemIsFavoriteHandler=(meetupId)=>{\n        //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n        return userFavorites.some(meetup=>meetup.id===meetupId)\n    }\n\n    const context={\n        favorites:userFavorites,\n        totalFavorites:userFavorites.length,\n        addFavorite:addFavoriteHandler,\n        removeFavorite:removeFavoriteHandler,\n        itemIsFavorite:itemIsFavoriteHandler\n    };\n\n    return <FavoritesContext.Provider value={context}>\n        {props.children}\n    </FavoritesContext.Provider>\n}\n\n","import React from 'react'\nimport classes from './Card.module.css'\n\nconst Card = (props) => {\n    return (\n        <div className={classes.card}>\n            {/* holds the children between the opening and closing tag */}\n            {props.children} \n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\r\nimport classes from './Modal.module.css'\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <p>Are you sure?</p>\r\n            <button className={classes.cancelButton} onClick={props.onClickCancel}>Cancel</button>\r\n            <button className={classes.confirmButton} onClick={props.onClickConfirm}>Confirm</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\nconst Backdrop = ({onClick}) => {\r\n    return (\r\n        <div className={classes.backdrop} onClick={onClick}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Backdrop\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport Backdrop from './Backdrop';\r\nimport { useState } from 'react';\r\nconst Delete = (props) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false); //used to control modal pop up\r\n\r\n    const deleteHandler=()=>{\r\n        setModalIsOpen(true);\r\n       \r\n    }\r\n\r\n    const confirmHandler=()=>{\r\n        setModalIsOpen(false);\r\n        props.onDelete(props.id); //delete the study set\r\n    }\r\n\r\n    const cancelHandler=()=>{\r\n        setModalIsOpen(false);\r\n    }\r\n\r\n    const backDropHandler=()=>{\r\n        setModalIsOpen(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={deleteHandler}>Delete</button>\r\n\r\n            {/* only display/render when delete is clicked (modalIsOpen is set to true) */}\r\n            {modalIsOpen && <Modal onClickCancel={cancelHandler} onClickConfirm={confirmHandler}></Modal>}\r\n            {modalIsOpen && <Backdrop onClick={backDropHandler}></Backdrop>}\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Delete\r\n","import React from 'react';\nimport { useState, useEffect, createContext } from 'react';\nimport StudySetList from '../components/StudySets/StudySetList';\n\nexport const isLoadingContext = createContext({\n    onDelete: ()=>{},\n    loadedSets:[]\n});\n\nconst AllStudySetsPage = () => {\n    const [isLoading, setIsLoading] = useState(true); //is the page still loading \n    const [loadedSets, setLoadedSets] = useState([]);//all the study sets fetched from the server \n    const [isRerender,setIsRerender]=useState(false); //whether the page needs to be rerendered \n\n    //provide as a context to other classes (StudySetItem)\n    const handleDelete=()=>{\n        setIsRerender(true); //rerender the list after deletion\n    };\n    \n    useEffect(() => {\n        //fetch the data from the database \n        setIsLoading(true);\n        fetch('https://react-meetup-a340c-default-rtdb.firebaseio.com/study-sets.json')\n            .then((response) => {\n\n                return response.json();\n            })\n            .then((data) => { //handle the returned object by firebase \n                console.log(data)\n                const studysets = [];\n\n                for (const key in data) {\n\n                    const studyset = {\n                        id: key,\n                        ...data[key] //copy the rest of the data\n                    }\n                    studysets.push(studyset);\n                }\n                setIsLoading(false); //once the data is here, change loading state \n                setLoadedSets(studysets); //set loaded set \n                setIsRerender(false);\n            });\n\n\n\n    }, [isRerender]);//if empty array, react only exectues useEffect the first time the component is rendered \n    //if we added isRerender, useEffect will run whenever the value of isRerender changes \n   \n    const context={\n        onDelete:handleDelete,\n        loadedSets:loadedSets\n    }\n    return (\n        <div>\n            <h1>Your study sets</h1>\n            {/* note:react can render an array of element with no problem  */}\n            <isLoadingContext.Provider value={context}> {isLoading ? <p>Loading...</p> : <StudySetList studysets={loadedSets} ></StudySetList>}</isLoadingContext.Provider>\n\n        </div>\n    )\n}\n\nexport default AllStudySetsPage\n","import React from 'react'\nimport classes from './StudySetItem.module.css'\nimport { useContext } from 'react'\nimport Card from '../ui/Card'\nimport { Link } from 'react-router-dom'\nimport { FavoritesContext } from '../../store/favorites-context'\nimport Delete from '../ui/Delete'\nimport { useHistory } from 'react-router'\nimport { isLoadingContext } from '../../pages/AllStudySets'\nimport {IoMdCheckmarkCircle} from \"react-icons/io\" \nconst StudySetItem = (props) => {\n    const history=useHistory() //might not need it\n    const favoritesCtx = useContext(FavoritesContext);\n    const isLoadingCtx=useContext(isLoadingContext);\n    \n    const itemIsFavorite = favoritesCtx.itemIsFavorite(props.id); //if a study set is set as favorite by the user \n\n    const toggleFavoriteStatusHandler = () => {\n        if (itemIsFavorite) {\n            favoritesCtx.removeFavorite(props.id);\n\n        }\n        else {\n            favoritesCtx.addFavorite({\n                id: props.id,\n                title: props.title,\n                description: props.description,\n                image: props.image,\n          \n            })\n        }\n    }\n\n\n    const deleteHandler = (id) => {\n       \n        fetch(`https://react-meetup-a340c-default-rtdb.firebaseio.com/study-sets/${id}.json`, { method: 'Delete' })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                isLoadingCtx.onDelete(); //rerender the list after deletion\n                \n            })\n    }\n\n\n    return (\n        <li className={classes.item}>\n            <Card>\n                <div className={classes.image}>\n                    {/* use the image if there's one, otherwise use the default icon  */}\n                    {props.image? <img src={props.image} alt={props.title}></img>:<IoMdCheckmarkCircle className={classes.altImg}></IoMdCheckmarkCircle>}\n                   \n                </div>\n                <div className={classes.content}>\n                    <h3>{props.title}</h3>\n                    <p>{props.description}</p>\n                </div>\n\n                <div className={classes.buttonGroup}>\n\n\n                    <div className={classes.actions}>\n\n                        <Link to={{\n                            pathname: \"/viewset\",\n                            state: {\n\n                                title: props.title,\n                                list: props.list,\n                                description:props.description,\n                                image:props.image,\n                                id:props.id\n                            }\n                        }} >\n                            <button> Open</button>\n                        </Link>\n\n                    </div>\n                    <div className={classes.actions}>\n                        <Delete id={props.id} onDelete={deleteHandler}></Delete>\n                    </div>\n\n                    <div className={classes.actions}>\n                        <button onClick={toggleFavoriteStatusHandler}>{itemIsFavorite ? 'Remove from Favorites' : 'To Favorites'}</button>\n                    </div>\n                </div>\n\n\n            </Card>\n\n\n        </li>\n\n    )\n}\n\nexport default StudySetItem\n","import React from 'react'\nimport StudySetItem from './StudySetItem'\nimport classes from './StudySetList.module.css'\n\n//css modules:https://css-tricks.com/css-modules-part-1-need/ \n\nconst StudySetList = (props) => {\n    return (\n\n        <ul className={classes.list}>\n            {props.studysets.length>0?props.studysets.map(studyset => <StudySetItem key={studyset.id} id={studyset.id} image={studyset.image} title={studyset.title} description={studyset.description} list={studyset.list} />):\"You don't have a study set. Go create one.\"}\n            \n        </ul>\n    )\n}\n\nexport default StudySetList\n","import React from 'react'\nimport { useContext } from 'react'\n\nimport { FavoritesContext } from '../store/favorites-context'\nimport StudySetList from '../components/StudySets/StudySetList'\n\n//note the elements are not permernant, meaning that if we refresh that page, they're gone. \n//because we didn't store the favorites in a database or local storage.\n//TODO: try storing it in server  \nconst FavoritesPage = () => {\n\n    const favoritesCtx=useContext(FavoritesContext);\n    let content;\n\n    if(favoritesCtx.totalFavorites===0){\n        content=<p>You got no favorites yet. Start adding some?</p>\n    }\n    else{\n        content=<StudySetList studysets={favoritesCtx.favorites}></StudySetList>\n    }\n    return (\n       <section>\n\n           <h1>My Favorites</h1>\n           {content}\n       </section>\n    )\n}\n\nexport default FavoritesPage","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport classes from './MainNavigation.module.css'\nimport { useContext } from 'react'\nimport { FavoritesContext } from '../../store/favorites-context'\n\nconst MainNavigation = () => {\n    const favoritesCtx=useContext(FavoritesContext)\n    return (\n        // The <header> element represents a container for introductory content or a set of navigational links.\n       <header className={classes.header}>\n\n           <div className={classes.logo}>Flashtastic</div>\n           <nav>\n               <ul>\n                   <li>\n                       <Link to='/'>All Study Sets</Link>\n                   </li>\n\n                   <li>\n                       <Link to='/new-set'>Create New Study Set</Link>\n                   </li>\n\n                   <li>\n                       <Link to='/favorites'>My Favorites\n                        <span className={classes.badge}>{favoritesCtx.totalFavorites}</span>\n                       </Link>\n                   </li>\n               </ul>\n           </nav>\n       </header>\n    )\n}\n\nexport default MainNavigation\n","import React from 'react'\nimport classes from './Layout.module.css'\nimport MainNavigation from './MainNavigation'\n\nconst Layout = (props) => {\n    return (\n        <div>\n             <MainNavigation></MainNavigation>\n             <main className={classes.main}>\n                {props.children}\n                 {/* where the main content goes */}\n             </main>\n        </div>\n    )\n}\n\nexport default Layout\n","import React from 'react';\nimport Card from '../ui/Card';\nimport classes from './FlashcardForm.module.css';\nimport { useState } from 'react';\nconst FlashcardForm = (props) => {\n\n    const list = props.list; //input list passed from the parents, could be empty if creating a new form \n    const title = props.title;\n    const imgurl = props.imgurl;\n    const description = props.description;\n    const id = props.id;\n    const [inputList, setInputList] = useState(list ? list : [{ term: \"\", definition: \"\" }]);\n    const [titleInput, setTitleInput] = useState(title ? title : '');\n    const [imageInput, setImageInput] = useState(imgurl ? imgurl : '');\n    const [descriptionInput, setDescriptionInput] = useState(description ? description : '');\n\n\n    // handle input change\n    const handleInputChange = (e, index) => {\n        const { name, value } = e.target; //name->select term or def, value -> the actual value \n        console.log(\"Name: \", name);\n        console.log(\"Value: \", value);\n        const list = [...inputList];\n        list[index][name] = value;\n        setInputList(list);\n    };\n\n    // handle click event of the Remove button\n    const handleRemoveClick = index => {\n        const list = [...inputList];\n        list.splice(index, 1);\n        setInputList(list);\n    };\n\n    // handle click event of the Add button\n    const handleAddClick = () => {\n        setInputList([...inputList, { term: \"\", definition: \"\" }]);\n    };\n\n\n    //handle form submit (save button click)\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        // const enteredTitle = titleInputRef.current.value;\n        // const enteredImage = imageInputRef.current.value;\n        // const enteredDescription = descriptionInputRef.current.value;\n\n        const setData = {\n            title: titleInput,\n            image: imageInput,\n            description: descriptionInput,\n            list: inputList\n        }\n\n        props.onAddSet(setData, id) //send to backend \n    }\n    return (\n\n        <Card>\n            <form className={classes.form} onSubmit={submitHandler}>\n                <div className={classes.control}>\n                    <label htmlFor=\"title\">Set Name</label>\n                    <input type='text' placeholder='Create a name for your study set' required id='title' value={titleInput} onChange={(e) => setTitleInput(e.target.value)}></input>\n\n                </div>\n                {/* TODO: can try out file upload later  */}\n                <div className={classes.control}>\n                    <label htmlFor=\"image\"> Set Image</label>\n                    <input type='url' id='image' placeholder='Enter the url for your chosen image for the study set (optional)' value={imageInput} onChange={(e) => setImageInput(e.target.value)}></input>\n\n                </div>\n\n                <div className={classes.control}>\n                    <label htmlFor=\"description\"> Description</label>\n                    <textarea id='description' placeholder='Say something about the study set (optional)' rows='5' value={descriptionInput} onChange={(e) => setDescriptionInput(e.target.value)}></textarea>\n                    <br></br>\n                    <label htmlFor='termDefs'>Please enter your terms and definitions below:</label>\n\n                </div>\n\n\n\n\n\n                <div id='termDefs'>\n\n                    {/* citation:https://www.cluemediator.com/add-or-remove-input-fields-dynamically-with-reactjs */}\n                    {/* for the flashcard items  */}\n                    {inputList.map((x, i) => {\n                        return (\n                            <div className={classes.control}>\n                                <div className={classes.counter}>{i + 1}</div>\n                                <hr></hr>\n                                <input type='text' name='term' placeholder='Enter term' id={`term${i}`} value={x.term} required onChange={e => handleInputChange(e, i)}></input>\n\n                                <input type='text' name='definition' placeholder='Enter definition' id={`definition${i}`} value={x.definition} required onChange={e => handleInputChange(e, i)}></input>\n                                <br></br>\n                                <div className={classes.buttonBox}>\n                                    {inputList.length !== 1 && <button className={classes.removeButton} onClick={() => handleRemoveClick(i)}>Remove</button>}\n                                    {/* only display the add button at the last item  */}\n                                    {inputList.length - 1 === i && <button className={classes.addButton} onClick={handleAddClick}>Add</button>}\n                                </div>\n\n                            </div>\n\n\n                        )\n                    })}\n                </div>\n\n\n\n\n                <div className={classes.actions}>\n                    {/* <button onClick={submitHandler}>Save</button> */}\n                    <input type='submit' value='Save' className={classes.submitButton}></input>\n                </div>\n\n\n            </form>\n        </Card>\n\n\n\n\n    )\n}\n\nexport default FlashcardForm\n","import React from 'react'\nimport FlashcardForm from '../components/StudySets/FlashcardForm'\nimport { useHistory } from 'react-router' //used to manipulate browser history \n\nconst NewSetPage = () => {\n    const history=useHistory();\n    const addMeetupHandler=(setData,id=undefined)=>{\n        fetch(\"https://react-meetup-a340c-default-rtdb.firebaseio.com/study-sets.json\",\n        {\n            method:'POST',\n            body:JSON.stringify(setData),\n            headers:{\n                'Content-Type':'application/json'\n            }\n\n        }\n        ).then(()=>{\n            alert(\"Study set successfully added!\")\n            history.replace('/'); //navigate to the homepage \n        })\n    \n    }\n    return (\n      <section>\n\n          <h1>Add New Set</h1>\n          <FlashcardForm onAddSet={addMeetupHandler}></FlashcardForm>\n      </section>\n    )\n}\n\nexport default NewSetPage\n","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport classes from './ViewSet.module.css'\r\nimport { Link } from 'react-router-dom'\r\nconst ViewSet = () => {\r\n    //let itemList=props.items //list of terms and definition pairs\r\n    const { state } = useLocation();\r\n\r\n    console.log(state.list);\r\n    const list = state.list;\r\n    const title = state.title;\r\n    const description = state.description;\r\n    const image = state.image;\r\n    const id = state.id;\r\n    // console.log(\"view set id: \",id)\r\n    return (\r\n\r\n        <div>\r\n            <div className={classes.termTable}>\r\n\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th >Term</th>\r\n                            <th>Definition</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {list.map((x, i) => {\r\n                            return (\r\n\r\n                                <tr>\r\n\r\n                                    <td>{x.term}</td>\r\n                                    <td>{x.definition}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div className={classes.actions}>\r\n                <Link to={{\r\n                    pathname: '/editset',\r\n                    state: {\r\n                        list: list,\r\n                        title: title,\r\n                        description: description,\r\n                        image: image,\r\n                        id: id\r\n                    }\r\n                }}>\r\n                    <button className={classes.editBtn}> Edit Set</button>\r\n                </Link>\r\n\r\n<Link to={\r\n    {\r\n        pathname:'/flashcardMode',\r\n        state:{\r\n            list:list\r\n        }\r\n    }\r\n}>\r\n\r\n<button className={classes.studyBtn}> Study Set</button>\r\n</Link>\r\n               \r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ViewSet\r\n","import React from 'react';\r\nimport FlashcardForm from '../components/StudySets/FlashcardForm';\r\nimport { useHistory, useLocation } from 'react-router'; //used to manipulate browser history \r\n\r\n\r\nconst EditSetPage = () => {\r\n    const history=useHistory();\r\n    const { state } = useLocation();\r\n    const list=state.list;\r\n    const title=state.title;\r\n    const description=state.description;\r\n    const image=state.image;\r\n    const id=state.id;\r\n\r\n    const editMeetupHandler=(setData,id)=>{\r\n      \r\n      fetch(`https://react-meetup-a340c-default-rtdb.firebaseio.com/study-sets/${id}.json`,{\r\n          method:'PUT',\r\n          headers:{\r\n            'Content-type': 'application/json'\r\n          },\r\n          body:JSON.stringify(setData)\r\n\r\n      }).then(\r\n          (response)=>{\r\n              alert(\"Edit successful!\");\r\n              history.replace('/'); //navigate back to homepage\r\n          }\r\n      )\r\n      \r\n    }\r\n\r\n \r\n\r\n    \r\n    return (\r\n      <section>\r\n\r\n          <h1>Edit Set</h1>\r\n          <FlashcardForm onAddSet={editMeetupHandler} list={list} title={title} id={id} description={description} imgurl={image} ></FlashcardForm>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default EditSetPage\r\n","import React from 'react'\r\nimport classes from './FlashcardModeKernel.module.css'\r\n\r\nconst FlashcardModeKernel = (props) => {\r\n\r\n    console.log(props.data);\r\n\r\n    return (\r\n        <div className={classes.card}>\r\n\r\n                <p>Welcome!</p>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default FlashcardModeKernel\r\n","import React from 'react'\r\n\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport FlashcardModeKernel from '../components/StudySets/FlashcardModeKernel';\r\n\r\nconst FlashcardMode = () => {\r\n\r\n    const history = useHistory();\r\n    const { state } = useLocation();\r\n    const data = state.list;\r\n    console.log(\"Data: \", data);\r\n\r\n    return (\r\n\r\n\r\n        <FlashcardModeKernel data={data}>\r\n\r\n           \r\n        </FlashcardModeKernel>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default FlashcardMode\r\n","import { Route, Switch } from 'react-router-dom' //parse different paths, switch tells the browser only one route should be active \nimport FavoritesPage from './pages/Favorites';\nimport MainNavigation from './components/layout/MainNavigation';\nimport Layout from './components/layout/Layout';\nimport NewSetPage from './pages/NewSet';\nimport ViewSet from './components/StudySets/ViewSet';\nimport AllStudySetsPage from './pages/AllStudySets';\nimport EditSetPage from './pages/EditSet';\nimport FlashcardMode from './pages/FlashcardMode';\nfunction App() {\n  return (\n    <Layout>\n\n      <Switch>\n        {/* if we don't add the exact keyword the browser would stop at the first route every time */}\n        <Route exact path='/'>\n          <AllStudySetsPage></AllStudySetsPage>\n\n        </Route>\n        <Route path='/new-set'>\n          <NewSetPage></NewSetPage>\n        </Route>\n\n        <Route path='/favorites'>\n          <FavoritesPage></FavoritesPage>\n        </Route>\n\n        <Route path='/viewset'>\n          <ViewSet></ViewSet>\n        </Route>\n\n        <Route path='/editset'>\n          <EditSetPage></EditSetPage>\n        </Route>\n\n        <Route path='/flashcardMode'>\n          <FlashcardMode></FlashcardMode>\n        </Route>\n\n      </Switch>\n\n    </Layout>\n\n\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport { FavoritesContext, FavoritesContextProvider } from './store/favorites-context'\n\n\n\nReactDOM.render(\n  <FavoritesContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n\n  </FavoritesContextProvider>\n  ,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FlashcardForm_form__wRPwI\",\"control\":\"FlashcardForm_control__Bb0eW\",\"counter\":\"FlashcardForm_counter__2jXjK\",\"actions\":\"FlashcardForm_actions__3gri3\",\"removeButton\":\"FlashcardForm_removeButton__1Thy9\",\"addButton\":\"FlashcardForm_addButton__1cLIX\",\"submitButton\":\"FlashcardForm_submitButton__3rrQ8\"};"],"sourceRoot":""}